// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoPrint.Application.Ef;

#nullable disable

namespace NoPrint.Ef.Migrations
{
    [DbContext(typeof(NoPrintContext))]
    [Migration("20240121113944_v5")]
    partial class v5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("CustomerId_Seq")
                .StartsAt(1000L);

            modelBuilder.HasSequence("InvoicesId_Seq")
                .StartsAt(1000L);

            modelBuilder.HasSequence("ShopId_Seq")
                .StartsAt(1000L);

            modelBuilder.HasSequence("UserId_Seq")
                .StartsAt(1000L);

            modelBuilder.Entity("NoPrint.Customers.Domain.Model.Customer", b =>
                {
                    b.Property<long>("_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FillProfile")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("_Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NoPrint.Invoices.Domain.Models.Invoice", b =>
                {
                    b.Property<long>("_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DiscountFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EnterDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FinalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RawCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("_Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("NoPrint.Shops.Domain.Models.Shop", b =>
                {
                    b.Property<long>("_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("_Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("NoPrint.Users.Domain.Models.UserBase", b =>
                {
                    b.Property<long>("_Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("CanLogin")
                        .HasColumnType("bit");

                    b.Property<int>("TryLoginCount")
                        .HasColumnType("int");

                    b.HasKey("_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NoPrint.Customers.Domain.Model.Customer", b =>
                {
                    b.OwnsOne("NoPrint.Identity.Share.UserId", "User", b1 =>
                        {
                            b1.Property<long>("Customer_Id")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.HasKey("Customer_Id");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("Customer_Id");
                        });

                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("NoPrint.Invoices.Domain.Models.Invoice", b =>
                {
                    b.OwnsOne("NoPrint.Identity.Share.CustomerId", "Customer", b1 =>
                        {
                            b1.Property<long>("Invoice_Id")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.HasKey("Invoice_Id");

                            b1.ToTable("Invoices");

                            b1.WithOwner()
                                .HasForeignKey("Invoice_Id");
                        });

                    b.OwnsOne("NoPrint.Identity.Share.ShopId", "Shop", b1 =>
                        {
                            b1.Property<long>("Invoice_Id")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.HasKey("Invoice_Id");

                            b1.ToTable("Invoices");

                            b1.WithOwner()
                                .HasForeignKey("Invoice_Id");
                        });

                    b.OwnsMany("NoPrint.Invoices.Domain.ValueObjects.InvoiceItem", "Items", b1 =>
                        {
                            b1.Property<long>("Invoice_Id")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<decimal>("Count")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("DiscountFee")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("DiscountRate")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("FinalFee")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Price")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("ProductCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ProductName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal>("RawFee")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("Invoice_Id", "Id");

                            b1.ToTable("InvoiceItem");

                            b1.WithOwner()
                                .HasForeignKey("Invoice_Id");
                        });

                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Items");

                    b.Navigation("Shop")
                        .IsRequired();
                });

            modelBuilder.Entity("NoPrint.Shops.Domain.Models.Shop", b =>
                {
                    b.OwnsOne("NoPrint.Identity.Share.UserId", "User", b1 =>
                        {
                            b1.Property<long>("Shop_Id")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .HasColumnType("bigint");

                            b1.HasKey("Shop_Id");

                            b1.ToTable("Shops");

                            b1.WithOwner()
                                .HasForeignKey("Shop_Id");
                        });

                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("NoPrint.Users.Domain.Models.UserBase", b =>
                {
                    b.OwnsOne("NoPrint.Users.Domain.ValueObjects.UserExpireDate", "ExpireDate", b1 =>
                        {
                            b1.Property<long>("UserBase_Id")
                                .HasColumnType("bigint");

                            b1.Property<DateTime?>("ExpireDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("UserBase_Id");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserBase_Id");
                        });

                    b.OwnsMany("NoPrint.Users.Domain.ValueObjects.LoginInstance", "LoginInstances", b1 =>
                        {
                            b1.Property<long>("UserBase_Id")
                                .HasColumnType("bigint");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("DeviceInfo")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastLogin")
                                .HasColumnType("datetime2");

                            b1.Property<Guid?>("LoginId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("UserBase_Id", "Id");

                            b1.ToTable("LoginInstance");

                            b1.WithOwner()
                                .HasForeignKey("UserBase_Id");

                            b1.OwnsOne("NoPrint.Users.Domain.ValueObjects.UserExpireDate", "ExpireDate", b2 =>
                                {
                                    b2.Property<long>("LoginInstanceUserBase_Id")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("LoginInstanceId")
                                        .HasColumnType("int");

                                    b2.Property<DateTime?>("ExpireDate")
                                        .HasColumnType("datetime2");

                                    b2.HasKey("LoginInstanceUserBase_Id", "LoginInstanceId");

                                    b2.ToTable("LoginInstance");

                                    b2.WithOwner()
                                        .HasForeignKey("LoginInstanceUserBase_Id", "LoginInstanceId");
                                });

                            b1.Navigation("ExpireDate")
                                .IsRequired();
                        });

                    b.OwnsOne("NoPrint.Users.Domain.ValueObjects.User", "User", b1 =>
                        {
                            b1.Property<long>("UserBase_Id")
                                .HasColumnType("bigint");

                            b1.Property<string>("Password")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserBase_Id");

                            b1.ToTable("Users_up", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserBase_Id");
                        });

                    b.OwnsOne("NoPrint.Users.Domain.ValueObjects.Visitor", "Visitor", b1 =>
                        {
                            b1.Property<long>("UserBase_Id")
                                .HasColumnType("bigint");

                            b1.Property<int?>("Code")
                                .HasColumnType("int");

                            b1.Property<DateTime?>("CodeGenerateTime")
                                .HasColumnType("datetime2");

                            b1.HasKey("UserBase_Id");

                            b1.ToTable("Visitors", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserBase_Id");
                        });

                    b.Navigation("ExpireDate")
                        .IsRequired();

                    b.Navigation("LoginInstances");

                    b.Navigation("User");

                    b.Navigation("Visitor");
                });
#pragma warning restore 612, 618
        }
    }
}
